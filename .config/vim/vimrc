" set leader key to space
let mapleader = " "

" skip defaults settings
let skip_defaults_vim=1

" set nocompatible to Vi
set nocompatible

" enable syntax highlighting
syntax enable
filetype plugin on

" set numbers and relative numbers on
set number
set relativenumber

" show the commands normal, insert ...etc
" by default it is on, but I want to be explicit
set showmode

" show the cursor position
set ruler

" minimal number of screen lines to keep above and below the cursor.
set scrolloff=10

" copy indent from current line when starting a new line
set autoindent
set smartindent " should be on with autoindent

" set tab settigs
set softtabstop=2
set shiftwidth=2
set expandtab
set smarttab " when on, a <Tab> in front of a line inserts blanks according to

" nice looking list chars
set listchars=tab:→\ ,eol:↲,space:␣

" do not wrap the text
set nowrap

" no backups
set nobackup
set noswapfile
set nowritebackup

" highlight search
set hlsearch
set incsearch  " highlight matched words while typing
set ignorecase " ignore case when searching

" set the colored column on the right
set colorcolumn=80
set textwidth=80
"highlight ColorColumn ctermbg=grey " change the color

" buffer becomes hidden when it is |abandon|ed.
set hidden

" be quet, do not make noise
set noerrorbells

" allows copy from vim
set clipboard+=unnamedplus

" enable omni-completion
set omnifunc=syntaxcomplete#Complete

" set menu completion
set wildmenu

" set concealing
set conceallevel=2

" be faster
set updatetime=100

" PLUGINS
" load plugins only if vim plug installed
if filereadable(expand("~/.vim/autoload/plug.vim"))

  call plug#begin('~/.vimplugins')
    Plug 'sheerun/vim-polyglot'
    "Plug 'pangloss/vim-javascript'
    Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries' }
    Plug 'tpope/vim-fugitive'
    Plug 'airblade/vim-gitgutter'
    "Plug 'morhetz/gruvbox'
    Plug 'aditya-azad/candle-grey'
  call plug#end()

  " colorscheme settings

  set background=dark
  "colorscheme gruvbox
  set t_Co=256 " enable colors in terminal
  colorscheme candle-grey

  highlight ColorColumn ctermbg=236
  "highlight LineNr guifg=#5eacd3
  highlight Normal guibg=NONE ctermbg=0
  highlight SignColumn guibg=NONE ctermbg=0

	" base default color changes (gruvbox dark friendly)
	hi Normal ctermbg=NONE
	hi Special ctermfg=cyan guifg=cyan
	hi SpecialKey ctermfg=black ctermbg=NONE
	hi NonText ctermfg=black ctermbg=NONE
	hi vimGlobal ctermfg=black ctermbg=NONE
	hi ErrorMsg ctermbg=234 ctermfg=darkred cterm=NONE
	hi Error ctermbg=234 ctermfg=darkred cterm=NONE
	hi SpellBad ctermbg=234 ctermfg=darkred cterm=NONE
	hi SpellRare ctermbg=234 ctermfg=darkred cterm=NONE
	hi Search ctermbg=236 ctermfg=darkred
	hi vimTodo ctermbg=236 ctermfg=darkred
	hi Todo ctermbg=236 ctermfg=darkred
	hi IncSearch ctermbg=236 cterm=NONE ctermfg=darkred
	hi MatchParen ctermbg=236 ctermfg=darkred

	au FileType markdown,pandoc hi Title ctermfg=yellow ctermbg=NONE
	au FileType markdown,pandoc hi Operator ctermfg=yellow ctermbg=NONE

  " column for showing modified lines
  " for gitgutter plugin
  set signcolumn=yes
  " the background colours to match the sign column
  let g:gitgutter_set_sign_backgrounds = 1

  " golang
  let g:go_fmt_fail_silently = 0
  let g:go_fmt_command = 'goimports'
  let g:go_fmt_autosave = 1
  let g:go_gopls_enabled = 1
  let g:go_auto_sameids = 0
else
  autocmd BufWrite *.go !gofmt -w % " backup if fatih fails
endif

" displays all the syntax rules for current position, useful
" when writing vimscript syntax plugins
function! <SID>SynStack()
  if !exists("*synstack")
    return
  endif
    echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
endfunc

" Conceal ends of markdown `code` to just code
syn region mkdCode matchgroup=mkdDelimiter start=/\(\([^\\]\|^\)\\\)\@<!`/ end=/\(\([^\\]\|^\)\\\)\@<!`/ concealends
hi htmlItalic ctermfg=14 ctermbg=0 guifg=NONE guibg=NONE cterm=bold
hi htmlH1 ctermfg=cyan ctermbg=0 guifg=NONE guibg=NONE cterm=bold
hi mkdLink ctermfg=blue ctermbg=NONE cterm=underline

" move selected line / block of text in visual mode
" shift + k to move up
" shift + j to move down
xnoremap K :move '<-2<CR>gv-gv
xnoremap J :move '>+1<CR>gv-gv

" delete current buffer
nmap <C-x> :bd!<CR>
" move to the next buffer
nmap <tab> :bnext<CR>
" move to the previous buffer
nmap <s-tab> :bprev<CR>
" jump to the <++>
nnoremap <space><space> <esc>/<++><cr>"_c4l
" show syntax rule
nmap <F2> :call <SID>SynStack()<CR>
" open my vimrc fast
nnoremap <leader>vrc :e $VIMRC<CR>
" list buffers
nnoremap <leader>fb :buffers<CR>
" comment lines
nnoremap <leader>cmt :.!cmt<space>
autocmd FileType go nnoremap <leader>cmt :.!cmt<space>//<CR>
autocmd FileType vim nnoremap <leader>cmt :.!cmt<space>\"<CR>

" automatically deletes all trailing whitespace and newlines at end of
" file on save.
autocmd BufWritePre * %s/\s\+$//e
autocmd BufWritePre * %s/\n\+\%$//e
